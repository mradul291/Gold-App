frappe.ui.form.on('Purchase Receipt Item', {
    item_group: function(frm, cdt, cdn) {
        let row = locals[cdt][cdn];

        if (row.item_group) {
            frappe.call({
                method: "frappe.client.insert",
                args: {
                    doc: {
                        doctype: "Item",
                        item_group: row.item_group,
                        is_stock_item: 1
                    }
                },
                callback: function(r) {
                    if (r.message) {
                        // This will now be generated by your autoname function
                        frappe.model.set_value(cdt, cdn, "item_code", r.message.name);
                        frappe.model.set_value(cdt, cdn, "item_group", r.message.item_group);

                        frappe.show_alert({
                            message: __("Item {0} created", [r.message.name]),
                            indicator: 'green'
                        });
                    }
                }
            });
        }
    }
});

frappe.ui.form.on("Purchase Receipt Item", {
    amount: function(frm, cdt, cdn) {
        let row = locals[cdt][cdn];
        if (row.qty && row.qty != 0) {
            // Custom reverse calculation
            row.rate = flt(row.amount) / flt(row.qty);
            frm.refresh_field("items");
        }
    },

    // Optional: keep ERPNext default flow intact
    rate: function(frm, cdt, cdn) {
        let row = locals[cdt][cdn];
        if (row.qty) {
            row.amount = flt(row.qty) * flt(row.rate);
            frm.refresh_field("items");
        }
    },

    qty: function(frm, cdt, cdn) {
        let row = locals[cdt][cdn];
        if (row.rate) {
            row.amount = flt(row.qty) * flt(row.rate);
        } else if (row.amount) {
            row.rate = flt(row.amount) / flt(row.qty);
        }
        frm.refresh_field("items");
    }
});
